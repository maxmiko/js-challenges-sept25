// Задача: обычная функция vs стрелочная; сравнить this.
function greet(name) {
  console.log('Привет, ' + name + '!');
  console.log('this (func):', this);
}
const greetArrow = (name) => {
  console.log(`Привет, ${name}!`);
  console.log('this (arrow):', this);
};

greet('Макс');
greetArrow('Макс');

// Выводы (замени своими):
// опираясь на: https://habr.com/ru/articles/738146/ и https://learn.javascript.ru/arrow-functions-basics, а также
// https://learn.javascript.ru/object-methods

// 1) .this наиболее полезен в работе с объектами, потому, что может взаимодействовать напрямую с аргументами и методами объекта в случае
// c классической декларацией функции. Т.е. это ссылка на объект. Например this.name? вместо user.name (user название объекта содержащий свойство name).
// лучше использовать this для безопасности в случае, если имя объекта поменяется.

// 2) В стрелочной функции this не привязано жестко к родительскому объекту или к родительской функции

// 3) В обычной — если функция это дочерняя функция родительского объекта, тогда будет использован этот объект
// и тогда точно можно получить доступ к другому аргументу объекта. в стрелочной это не обязательно так.


// 3) .this наиболее полезен в работе с объектами, потому, что может взаимодействовать напрямую с аргументами и методами объекта в случае
// c классической декларацией функции

// 4) В обоих случаях возвращается undefiend тк как 
